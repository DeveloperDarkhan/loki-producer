apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-producer
  namespace: project-logging
  labels:
    app: loki-producer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: loki-producer
  template:
    metadata:
      labels:
        app: loki-producer
        scrape/metrics: "true"
    spec:
      containers:
      - name: loki-producer
        image: dockerdarkhan/loki-producer:v1.5.1
        imagePullPolicy: IfNotPresent
        args:
          - "-config.file=/config/config.yaml"
        ports:
        - containerPort: 3101
        env:
        - name: KAFKA_DEBUG
          value: "0" # set to "1" to enable kafka writer debug logs
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_SASL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: loki-user
              key: password
        volumeMounts:
        - name: config
          mountPath: /config
        # - name: kafka-ca
        #   mountPath: /etc/ssl/certs/kafka
        #   readOnly: true
        readinessProbe:
          httpGet:
            path: /ready
            port: 3101
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ready
            port: 3101
          periodSeconds: 10
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 1
            memory: 512Mi
        securityContext:
            runAsNonRoot: true
            runAsUser: 10001
      volumes:
      - name: config
        configMap:
          name: loki-producer-config
  # - name: kafka-ca
  #   secret:
  #     secretName: loki-producer-kafka-ca
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: loki-producer-pdb
  namespace: project-logging
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: loki-producer